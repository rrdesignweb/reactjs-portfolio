@use "./variables" as *;

@function strip-unit($num) {
    @return $num / ($num * 0 + 1);
}

@function rem-calc($values, $base: 16) {
    $rem-values: ();
    $count: length($values);

    @if $base == null {
        $base: $rem-base;
    }

    @if $count == 1 {
        @return -zf-to-rem($values, $base);
    }

    @for $i from 1 through $count {
        $rem-values: append($rem-values, -zf-to-rem(nth($values, $i), $base));
    }

    @return $rem-values;
}

@function -zf-to-rem($value, $base: 16) {
    // Calculate rem if units for $value is not rem
    @if (unit($value) != "rem") {
        $value: strip-unit($value) / strip-unit($base) * 1rem;
    }
    // Turn 0rem into 0
    @if ($value == 0rem) {
        $value: 0;
    }
    @return $value;
}

@mixin h1 {
    font-size: rem-calc(34);
}

@mixin h2 {
    font-size: rem-calc(30);
    text-align: center;
    color: $highlightColor;
    text-transform: uppercase;
    font-weight: 300;
    //border-bottom: 1px solid $lightGrey;
    line-height: 1;
    margin-bottom: 25px;
    padding: 20px 0;
}

@mixin h3 {
    font-size: rem-calc(23);
}
